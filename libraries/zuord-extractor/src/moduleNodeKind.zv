import { SyntaxKind } from "ts-morph";
import { valueSyntaxKinds } from "./~valueSyntax";

//

export const Import: ZSchema.Import = SyntaxKind.ImportDeclaration;

export const Export: ZSchema.Export = SyntaxKind.ExportDeclaration;

export const ExportDefault: ZSchema.ExportDefault = SyntaxKind.ExportAssignment;

export const Type: ZSchema.Type = SyntaxKind.TypeAliasDeclaration;

export const Interface: ZSchema.Interface = SyntaxKind.InterfaceDeclaration;

export const Enum: ZSchema.Enum = SyntaxKind.EnumDeclaration;

export const Variable: ZSchema.Variable = SyntaxKind.VariableStatement;

export const Function: ZSchema.Function = SyntaxKind.FunctionDeclaration;

export const ArrowFunction: ZSchema.ArrowFunction = SyntaxKind.ArrowFunction;

export const FunctionExpression: ZSchema.FunctionExpression = SyntaxKind.FunctionExpression;

export const Values: ZSchema.Value[] = valueSyntaxKinds;